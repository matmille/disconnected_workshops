---

#####
# Git

- name: Start GIT daemon
  service:
    name: git.socket
    state: started
    enabled: yes
  tags:
    cd - hypervisor_setup

- name: re-Start GIT daemon (to ensure latest configuration is loaded)
  service:
    name: git.socket
    state: restarted
    enabled: yes
  tags:
    - hypervisor_setup

- name: Open firewall port(s) for GIT tcp
  firewalld:
    port: "9148/tcp"
    permanent: true
    state: enabled
  tags:
    - hypervisor_setup

- name: Open firewall port(s) for GIT udp
  firewalld:
    port: "9148/udp"
    permanent: true
    state: enabled
  tags:
    - hypervisor_setup

- name: Open firewall port(s) for GIT Web
  firewalld:
    port: "{{ git_port }}/tcp"
    permanent: true
    state: enabled
  tags:
    - hypervisor_setup

- name: Update /etc/shells for git-shell
  lineinfile:
    path: /etc/shells
    line: "/bin/git-shell"
  tags:
    - hypervisor_setup

- name: Create GIT user
  user:
    name: git
    password: "{{ password_git }}"
    home: "{{ git_projects }}"
    shell: "/bin/git-shell"
    generate_ssh_key: yes
    update_password: always
  tags:
    - hypervisor_setup

- name: Stat authorized_keys
  stat:
    path: "{{ git_projects }}/authorized_keys"
  register: stat_authorized_keys
  tags:
    - hypervisor_setup

- name: Allow GIT access
  copy:
    remote_src: True
    src: "{{ git_projects }}/.ssh/id_rsa.pub"
    dest: "{{ git_projects }}/.ssh/authorized_keys"
    owner: git
    group: git
  when: stat_authorized_keys.stat.exists == False
  tags:
   - hypervisor_setup

#####
# Git content

- name: Ensure that Ansible Galaxy role (STIG) is in share_directory
  stat:
    path: "{{ share_directory }}/galaxy.MindPointGroup"
  register: galaxy_MindPointGroup_RHEL7_STIG
  tags:
    - hypervisor_setup

- name: Create directory for Ansible Galaxy role (STIG) in share_directory
  file:
    path: "{{ share_directory }}/galaxy.MindPointGroup"
    state: directory
    owner: git
    group: git
    mode: 0775
  when: galaxy_MindPointGroup_RHEL7_STIG.stat.exists == False
  tags:
    - hypervisor_setup

- name: Clone RHEL7-STIG.git from Ansible Galaxy if it does not exist
  command: git clone https://github.com/MindPointGroup/RHEL7-STIG.git
  args:
    chdir: "{{ share_directory }}/galaxy.MindPointGroup"
  become_user: git
  when: galaxy_MindPointGroup_RHEL7_STIG.stat.exists == False
  tags:
    - hypervisor_setup

- name: Create directory for Ansible Galaxy role (STIG) in GIT path
  file:
    path: "{{ git_projects }}/galaxy.MindPointGroup"
    state: directory
    owner: git
    group: git
    mode: 0775
  tags:
   - hypervisor_setup

- name: Stage Ansible Galaxy role (STIG) in GIT path
  synchronize:
    src: "{{ share_directory }}/galaxy.MindPointGroup/"
    dest: "{{ git_projects }}/galaxy.MindPointGroup/"
    delete: yes
    recursive: yes
  tags:
    - hypervisor_setup

- name: Ensure that Ansible Galaxy role (NIST 800-53) is in share_directory
  stat:
    path: "{{ share_directory }}/galaxy.rhtps"
  register: galaxy_rhtps_800_53
  tags:
    - hypervisor_setup

- name: Create directory for Ansible Galaxy role (NIST 800-53) in share_directory
  file:
    path: "{{ share_directory }}/galaxy.rhtps"
    state: directory
    owner: git
    group: git
    mode: 0775
  when: galaxy_rhtps_800_53.stat.exists == False
  tags:
    - hypervisor_setup

- name: Clone rhtps.800-53 from Ansible Galaxy if it does not exist
  command: git clone https://github.com/rhtps/ansible-role-800-53.git
  args:
    chdir: "{{ share_directory }}/galaxy.rhtps"
  become_user: git
  when: galaxy_rhtps_800_53.stat.exists == False
  tags:
    - hypervisor_setup

- name: Create directory for Ansible Galaxy roles (NIST 800-53)
  file:
    path: "{{ git_projects }}/galaxy.rhtps"
    state: directory
    owner: git
    group: git
    mode: 0775
  tags:
    - hypervisor_setup

- name: Stage Ansible Galaxy role (NIST 800-53) in GIT path
  synchronize:
    src: "{{ share_directory }}/galaxy.rhtps/"
    dest: "{{ git_projects }}/galaxy.rhtps/"
    delete: yes
    recursive: yes
  tags:
    - hypervisor_setup

